#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: kenzo
#=================================================

name: Lienol_ghl-r-001

on:
  # release:
    # types: [published]
    
  push:
    branches:
      - main
    paths:
      - 'startcompilelienolghl'
      - 'startcompileall'
      
  # schedule:
    # - cron: 0 8 * * 5
  
  # watch:
    # types: [started]


jobs:
  build:
    runs-on: Ubuntu-20.04

    steps:
    - name: Ê£ÄÊü•
      uses: actions/checkout@master

    - name: ÂàùÂßãÂåñÁéØÂ¢É
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler ccache xsltproc rename antlr3 gperf wget curl swig rsync
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "Asia/Shanghai"
        
    - name: ËÆæÁΩÆÂΩìÂâçÁöÑÊó•Êúü
      id: date
      run: |
        echo "date=$(date +'%Y.%m.%d-%H%M')" >> $GITHUB_ENV
        echo "date2=$(date +'%m/%d %Y')" >> $GITHUB_ENV
        echo "date3=$(date +'%m.%d')" >> $GITHUB_ENV
        echo "date4=$(date +'%m.%d.%H')" >> $GITHUB_ENV
        echo "DOCKERTAG=${{ secrets.DOCKER_ID }}/openwrt-6p:latest" >> $GITHUB_ENV
        VERSION="$(echo "${{github.event.action}}" | grep -Eo " [0-9.]+" | sed -e 's/ //')" || true
        [ "$VERSION" ] && echo "VERSION=$VERSION" >> $GITHUB_ENV || echo "VERSION=$(date +'%m.%d')" >> $GITHUB_ENV    
        
    - name: ÂÖãÈöÜÊ∫ê‰ª£Á†Å
      env: 
        REPO_URL: https://github.com/Lienol/openwrt
        REPO_BRANCH: 19.07
      
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        sed -i '5s/#//' feeds.conf.default
        
    - name: Ëá™ÂÆö‰πâÂÆâË£ÖÊ∫ê
      working-directory: ./openwrt
      run: |
        git clone https://github.com/xiaorouji/openwrt-passwall package/openwrt-passwall
        
    - name: Êõ¥Êñ∞ & ÂÆâË£Ö feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        
    - name: Ëá™ÂÆö‰πâÈÖçÁΩÆÊñá‰ª∂Lienol
      env:
        CONFIG_FILE: 'ghl-r-001-lienol.config'
      run: |
        [ -e $CONFIG_FILE ] && cp -f $CONFIG_FILE openwrt/.config
        chmod +x ./customize.sh && ./customize.sh
        cd openwrt
        make defconfig
        
    - name: ‰∏ãËΩΩÂåÖÊñá‰ª∂
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: ÁºñËØëÂõ∫‰ª∂
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s       

    - name : ‰∏ä‰º†Âõ∫‰ª∂
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Êï¥ÁêÜÊñá‰ª∂
      id: organize
      run: |
        mkdir firmware
        mv -f openwrt/bin/targets/*/*/{*combined*,*sysupgrade*} ./firmware/ 2>/dev/null || true
        cd firmware
        echo "v${{ env.date4 }}" > version.txt
        md5=$((md5sum *squashfs-sysupgrade* || md5sum *squashfs-combined-efi*) | awk '{print $1}') 2>/dev/null
        echo $md5 >> version.txt
        rename -v "s/^immortalwrt/${{ env.VERSION }}-openwrt/" * || true
        rename -v "s/friendlyarm_//" *gz || true
        echo $md5 >> version.txt  
        rm -rf sha256sums
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
            
      
    - name: ‰∏ä‰º†Âõ∫‰ª∂ÁõÆÂΩï
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.date3 }}
        path: ${{ env.FIRMWARE }}
        
    - name: ÁîüÊàêÊ†áÁ≠æ
      id: tag
      run: |
        echo -e "Âä†ÈÄü‰∏ãËΩΩ üéà:\n" >> release.txt
        echo -e "lunatickochiya)\n" >> release.txt
        touch release.txt
        echo "::set-output name=status::success"
        
    - name: ‰∏ä‰º†Âõ∫‰ª∂ÂèëÂ∏É
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      with:
        files: "${{ env.FIRMWARE }}/*"
        name: ${{ env.date2 }} ${{matrix.target}}
        tag_name: ${{ env.date }}_${{matrix.target}}
        body_path: release.txt
        
    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3
